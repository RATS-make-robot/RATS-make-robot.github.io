# action 이름. 원하는대로 정하면 된다. 
name: deploy ghpage

# on: 뒤에오는 event가 발생하면 action이 실행된다. 아래는 master branch에 push 나 pull request가 발생하면 action이 실행되는 코드이다. 보통 그냥 두면 된다. 
on:
  push:
    branches: [ toha ]
  pull_request:
    branches: [ toha ]

# jobs은 실행될 action을 포함하고 있다.  
jobs:
  
  build:
    runs-on: ubuntu-22.04
    #steps는 명령어 들이다. 
    # uses는 이미 만들어진 action을 사용하는 것, run은 명령어를 실행하는 것이다. 
    steps: 
    - name: Install Hugo CLI
      run: |
        wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
        && sudo dpkg -i ${{ runner.temp }}/hugo.deb  
    #1. 가상머신으로 checkout
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5
      # run 다음 내용들은 submodule을 최신으로 udapte한것을 가져오는 내용 + a이다.
        

    #5. build (public 폴더에 저장 된다.)
    - name: Build Hugo Site
      run: |
        hugo --gc --minify --baseURL "https://join.mju-rats.com/"
#    - name: Check Public Folder
#      run: |
#        ls -R ./public || echo "Public folder is empty or not created"
      # minify는 압축시키는 것을 의미한다. 
#    - name: Upload Artifact
#      uses: actions/upload-artifact@v4
#      with:
#        name: hugo-site
#        path: ./public

    #6.Deploy 배포: git token이 필요하다. gh-pages로 publish하는 것 잊지 말자 
    #public 폴더를 github page의 gh-pages 브챈치에 배포한다는 의미이다. 
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.MABANGKEY }}
        publish_branch: gh-pages
        publish_dir: ./public
        cname: join.mju-rats.com
